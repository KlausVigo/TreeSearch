% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Ratchet.R, R/mpl_tree_search.R
\name{Ratchet}
\alias{Ratchet}
\alias{RatchetConsensus}
\title{Parsimony Ratchet}
\usage{
Ratchet(tree, dataset, InitializeData = PhyDat2Morphy,
  CleanUpData = UnloadMorphy, TreeScorer = MorphyLength,
  Bootstrapper = MorphyBootstrap, swappers = list(TBRSwap, SPRSwap,
  NNISwap), BootstrapSwapper = swappers[[1]], returnAll = FALSE,
  rooted = TRUE, stopAtScore = NULL, ratchIter = 100, ratchHits = 10,
  searchIter = 2000, searchHits = 40, bootstrapIter = searchIter,
  bootstrapHits = searchHits, verbosity = 1L, suboptimal = 1e-08, ...)

RatchetConsensus(tree, dataset, ratchIter = 5000, ratchHits = 10,
  searchIter = 500, searchHits = 20, verbosity = 0L,
  swappers = list(RootedNNISwap), nSearch = 10, ...)
}
\arguments{
\item{tree}{A tree of class \code{\link{phylo}}.}

\item{dataset}{a dataset in the format required by TreeScorer.}

\item{InitializeData}{Function that sets up data object to prepare for tree search. 
The function will be passed the \kbd{dataset} parameter.
Its return value will be passed to TreeScorer and CleanUpData.}

\item{CleanUpData}{Function to destroy data object on function exit.
The function will be passed the value returned by \kbd{InitializeData}.}

\item{TreeScorer}{function to score a given tree.
The function will be passed two parameters: the first a MorphyTree list, and the
second the value returned by \kbd{InitializeData}.}

\item{Bootstrapper}{Function to perform bootstrapped rearrangements of tree. 
First arguments will be an edgeList and a dataset, initialized using \code{InitializeData}
Should return a rearranged edgeList.}

\item{swappers}{A list of functions to use to conduct edge rearrangement.
Provide functions like \code{\link{NNISwap}} to shuffle root position,
or \code{\link{RootedTBRSwap}} if the position of the root should be retained.}

\item{BootstrapSwapper}{Function such as \code{\link{RootedNNISwap}} to use to rearrange trees
within \code{Bootstrapper}.}

\item{returnAll}{Set to \code{TRUE} to report all MPTs encountered during the search, perhaps to analyze consensus.}

\item{rooted}{whether to retain the position of the root in tree search (TRUE by default).}

\item{stopAtScore}{stop search as soon as this score is hit or beaten.}

\item{ratchIter}{stop when this many ratchet iterations have been performed.}

\item{ratchHits}{stop when this many ratchet iterations have found the same best score.}

\item{searchIter}{maximum rearrangements to perform on each bootstrap or ratchet iteration.}

\item{searchHits}{maximum times to hit best score before terminating a tree search within a ratchet iteration.}

\item{bootstrapIter}{maximum rearrangements to perform on each bootstrap  iteration (default: \code{maxIter}).}

\item{bootstrapHits}{maximum times to hit best score on each bootstrap  iteration (default: \code{maxHits}).}

\item{verbosity}{Level of detail to display in console: larger numbers provide
more verbose feedback to the user.}

\item{suboptimal}{retain trees that are suboptimal by this score. Defaults to 1e-08 to counter rounding errors.}

\item{\dots}{further arguments to pass to \code{TreeScorer} function (e.g. \code{\link{TipsAreColumns}}, \code{dataset})}

\item{nSearch}{Number of Ratchet searches to conduct (for RatchetConsensus)}
}
\value{
This function returns a tree modified by parsimony ratchet iterations.
}
\description{
\code{Ratchet} uses the parsimony ratchet (Nixon 1999) to search for a more parsimonious tree.
}
\section{Functions}{
\itemize{
\item \code{RatchetConsensus}: returns a list of optimal trees produced by nSearch Ratchet searches
}}

\references{
Nixon, K. C. (1999). \cite{The Parsimony Ratchet, a new method for rapid parsimony analysis.}
 Cladistics, 15(4), 407-414. doi:\href{http://dx.doi.org/10.1111/j.1096-0031.1999.tb00277.x}{10.1111/j.1096-0031.1999.tb00277.x}
}
\seealso{
\code{\link{TreeSearch}}

\code{\link{Sectorial}}

Adapted from \code{\link[phangorn]{pratchet}} in the \pkg{phangorn} package.
}
\author{
Martin R. Smith
}
\keyword{tree}
